// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="compute,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.116600,HLS_SYN_LAT=6292,HLS_SYN_TPT=none,HLS_SYN_MEM=14,HLS_SYN_DSP=25,HLS_SYN_FF=2003,HLS_SYN_LUT=2508}" *)

module compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ip_address0,
        ip_ce0,
        ip_q0,
        ip_address1,
        ip_ce1,
        ip_q1
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_state3 = 54'd4;
parameter    ap_ST_fsm_state4 = 54'd8;
parameter    ap_ST_fsm_state5 = 54'd16;
parameter    ap_ST_fsm_state6 = 54'd32;
parameter    ap_ST_fsm_state7 = 54'd64;
parameter    ap_ST_fsm_state8 = 54'd128;
parameter    ap_ST_fsm_state9 = 54'd256;
parameter    ap_ST_fsm_state10 = 54'd512;
parameter    ap_ST_fsm_state11 = 54'd1024;
parameter    ap_ST_fsm_state12 = 54'd2048;
parameter    ap_ST_fsm_state13 = 54'd4096;
parameter    ap_ST_fsm_state14 = 54'd8192;
parameter    ap_ST_fsm_state15 = 54'd16384;
parameter    ap_ST_fsm_state16 = 54'd32768;
parameter    ap_ST_fsm_state17 = 54'd65536;
parameter    ap_ST_fsm_state18 = 54'd131072;
parameter    ap_ST_fsm_state19 = 54'd262144;
parameter    ap_ST_fsm_state20 = 54'd524288;
parameter    ap_ST_fsm_state21 = 54'd1048576;
parameter    ap_ST_fsm_state22 = 54'd2097152;
parameter    ap_ST_fsm_state23 = 54'd4194304;
parameter    ap_ST_fsm_state24 = 54'd8388608;
parameter    ap_ST_fsm_state25 = 54'd16777216;
parameter    ap_ST_fsm_state26 = 54'd33554432;
parameter    ap_ST_fsm_state27 = 54'd67108864;
parameter    ap_ST_fsm_state28 = 54'd134217728;
parameter    ap_ST_fsm_state29 = 54'd268435456;
parameter    ap_ST_fsm_state30 = 54'd536870912;
parameter    ap_ST_fsm_state31 = 54'd1073741824;
parameter    ap_ST_fsm_state32 = 54'd2147483648;
parameter    ap_ST_fsm_state33 = 54'd4294967296;
parameter    ap_ST_fsm_state34 = 54'd8589934592;
parameter    ap_ST_fsm_state35 = 54'd17179869184;
parameter    ap_ST_fsm_state36 = 54'd34359738368;
parameter    ap_ST_fsm_state37 = 54'd68719476736;
parameter    ap_ST_fsm_state38 = 54'd137438953472;
parameter    ap_ST_fsm_state39 = 54'd274877906944;
parameter    ap_ST_fsm_state40 = 54'd549755813888;
parameter    ap_ST_fsm_state41 = 54'd1099511627776;
parameter    ap_ST_fsm_state42 = 54'd2199023255552;
parameter    ap_ST_fsm_state43 = 54'd4398046511104;
parameter    ap_ST_fsm_state44 = 54'd8796093022208;
parameter    ap_ST_fsm_state45 = 54'd17592186044416;
parameter    ap_ST_fsm_state46 = 54'd35184372088832;
parameter    ap_ST_fsm_state47 = 54'd70368744177664;
parameter    ap_ST_fsm_state48 = 54'd140737488355328;
parameter    ap_ST_fsm_state49 = 54'd281474976710656;
parameter    ap_ST_fsm_state50 = 54'd562949953421312;
parameter    ap_ST_fsm_state51 = 54'd1125899906842624;
parameter    ap_ST_fsm_state52 = 54'd2251799813685248;
parameter    ap_ST_fsm_state53 = 54'd4503599627370496;
parameter    ap_ST_fsm_state54 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] ip_address0;
output   ip_ce0;
input  [63:0] ip_q0;
output  [9:0] ip_address1;
output   ip_ce1;
input  [63:0] ip_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] ip_address0;
reg ip_ce0;
reg[9:0] ip_address1;
reg ip_ce1;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] out_data_1_address0;
reg    out_data_1_ce0;
reg    out_data_1_we0;
wire   [63:0] out_data_1_q0;
reg   [7:0] fifo_out_address0;
reg    fifo_out_ce0;
reg    fifo_out_we0;
wire   [63:0] fifo_out_q0;
reg   [5:0] out_data_2_address0;
reg    out_data_2_ce0;
reg    out_data_2_we0;
wire   [63:0] out_data_2_q0;
wire   [5:0] out_data_address0;
reg    out_data_ce0;
reg    out_data_we0;
reg   [63:0] reg_463;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state12;
wire   [63:0] grp_fu_447_p2;
reg   [63:0] reg_469;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state46;
wire   [63:0] grp_fu_452_p2;
reg   [63:0] reg_475;
wire   [63:0] grp_fu_443_p2;
reg   [63:0] reg_480;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state50;
wire   [63:0] in_conv2_q0;
reg   [63:0] reg_487;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state41;
wire   [3:0] i_1_fu_498_p2;
reg   [3:0] i_1_reg_1127;
wire    ap_CS_fsm_state2;
wire   [10:0] tmp_s_fu_536_p2;
reg   [10:0] tmp_s_reg_1132;
wire   [0:0] exitcond1_i_fu_492_p2;
wire   [10:0] tmp_7_fu_572_p2;
reg   [10:0] tmp_7_reg_1138;
wire   [8:0] tmp_10_fu_594_p2;
reg   [8:0] tmp_10_reg_1144;
wire   [3:0] j_1_fu_606_p2;
reg   [3:0] j_1_reg_1152;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond_i_fu_600_p2;
wire   [10:0] tmp_15_fu_634_p2;
reg   [10:0] tmp_15_reg_1162;
wire   [10:0] tmp_17_fu_659_p2;
reg   [10:0] tmp_17_reg_1172;
wire   [8:0] tmp_18_fu_668_p2;
reg   [8:0] tmp_18_reg_1177;
reg   [63:0] ip_load_1_reg_1182;
wire    ap_CS_fsm_state7;
reg   [63:0] ip_load_2_reg_1192;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
wire   [3:0] i_3_fu_691_p2;
reg   [3:0] i_3_reg_1205;
wire    ap_CS_fsm_state23;
wire   [7:0] counter_buffer1_2_fu_697_p2;
reg   [7:0] counter_buffer1_2_reg_1210;
wire   [0:0] exitcond5_fu_685_p2;
wire   [8:0] tmp_13_fu_727_p2;
reg   [8:0] tmp_13_reg_1215;
wire   [3:0] j_2_fu_739_p2;
reg   [3:0] j_2_reg_1223;
wire    ap_CS_fsm_state24;
wire   [0:0] exitcond4_fu_733_p2;
wire   [7:0] tmp_2_fu_759_p2;
wire    ap_CS_fsm_state25;
wire   [7:0] i_2_fu_776_p2;
reg   [7:0] i_2_reg_1241;
wire    ap_CS_fsm_state26;
wire   [63:0] tmp_i3_fu_782_p1;
reg   [63:0] tmp_i3_reg_1246;
wire   [0:0] exitcond_i2_fu_770_p2;
wire   [3:0] i_4_fu_793_p2;
reg   [3:0] i_4_reg_1259;
wire    ap_CS_fsm_state28;
wire   [7:0] counter_buffer2_2_fu_799_p2;
reg   [7:0] counter_buffer2_2_reg_1264;
wire   [0:0] exitcond3_fu_787_p2;
wire   [8:0] tmp_22_fu_829_p2;
reg   [8:0] tmp_22_reg_1269;
wire   [3:0] j_3_fu_841_p2;
reg   [3:0] j_3_reg_1277;
wire    ap_CS_fsm_state29;
wire   [7:0] tmp_4_fu_847_p2;
reg   [7:0] tmp_4_reg_1282;
wire   [0:0] exitcond2_fu_835_p2;
wire   [8:0] tmp_31_fu_862_p2;
reg   [8:0] tmp_31_reg_1292;
wire   [2:0] i_6_fu_877_p2;
reg   [2:0] i_6_reg_1300;
wire    ap_CS_fsm_state31;
wire   [8:0] tmp_25_fu_915_p2;
reg   [8:0] tmp_25_reg_1305;
wire   [0:0] exitcond1_i5_fu_871_p2;
wire   [8:0] tmp_28_fu_951_p2;
reg   [8:0] tmp_28_reg_1311;
wire   [6:0] tmp_30_fu_973_p2;
reg   [6:0] tmp_30_reg_1317;
wire   [2:0] j_4_fu_985_p2;
reg   [2:0] j_4_reg_1325;
wire    ap_CS_fsm_state32;
wire   [0:0] exitcond_i9_fu_979_p2;
wire   [8:0] tmp_35_fu_1013_p2;
reg   [8:0] tmp_35_reg_1335;
wire   [8:0] tmp_37_fu_1038_p2;
reg   [8:0] tmp_37_reg_1345;
wire   [6:0] tmp_38_fu_1047_p2;
reg   [6:0] tmp_38_reg_1350;
wire   [63:0] in_conv2_q1;
reg   [63:0] in_conv2_load_1_reg_1355;
wire    ap_CS_fsm_state36;
reg   [63:0] in_conv2_load_2_reg_1365;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state40;
wire   [2:0] i_5_fu_1070_p2;
reg   [2:0] i_5_reg_1378;
wire    ap_CS_fsm_state52;
wire   [6:0] tmp_33_fu_1092_p2;
reg   [6:0] tmp_33_reg_1383;
wire   [0:0] exitcond1_fu_1064_p2;
wire   [2:0] j_5_fu_1104_p2;
reg   [2:0] j_5_reg_1391;
wire    ap_CS_fsm_state53;
wire  signed [63:0] tmp_45_cast_fu_1119_p1;
reg  signed [63:0] tmp_45_cast_reg_1396;
wire   [0:0] exitcond_fu_1098_p2;
reg   [7:0] fifo_in_temp_address0;
reg    fifo_in_temp_ce0;
reg    fifo_in_temp_we0;
wire   [63:0] fifo_in_temp_q0;
reg   [7:0] in_conv2_address0;
reg    in_conv2_ce0;
reg    in_conv2_we0;
reg   [7:0] in_conv2_address1;
reg    in_conv2_ce1;
reg   [3:0] i_i_reg_277;
reg   [3:0] j_i_reg_288;
wire    ap_CS_fsm_state22;
reg   [3:0] i_reg_299;
reg   [7:0] counter_buffer1_reg_310;
reg   [3:0] j_reg_322;
reg   [7:0] counter_buffer1_1_reg_333;
reg   [7:0] i_i1_reg_344;
wire    ap_CS_fsm_state27;
reg   [3:0] i1_reg_355;
reg   [7:0] counter_buffer2_reg_366;
reg   [3:0] j2_reg_378;
wire    ap_CS_fsm_state30;
reg   [7:0] counter_buffer2_1_reg_389;
reg   [2:0] i_i4_reg_399;
reg   [2:0] j_i8_reg_410;
wire    ap_CS_fsm_state51;
reg   [2:0] i3_reg_421;
reg   [2:0] j4_reg_432;
wire    ap_CS_fsm_state54;
wire  signed [63:0] tmp_20_cast_fu_629_p1;
wire  signed [63:0] tmp_22_cast_fu_654_p1;
wire  signed [63:0] tmp_21_cast_fu_673_p1;
wire  signed [63:0] tmp_23_cast_fu_677_p1;
wire  signed [63:0] tmp_24_cast_fu_681_p1;
wire  signed [63:0] tmp_25_cast_fu_754_p1;
wire   [63:0] tmp_3_fu_765_p1;
wire   [63:0] tmp_5_fu_853_p1;
wire  signed [63:0] tmp_37_cast_fu_867_p1;
wire  signed [63:0] tmp_40_cast_fu_1008_p1;
wire  signed [63:0] tmp_42_cast_fu_1033_p1;
wire  signed [63:0] tmp_41_cast_fu_1052_p1;
wire  signed [63:0] tmp_43_cast_fu_1056_p1;
wire  signed [63:0] tmp_44_cast_fu_1060_p1;
reg   [63:0] grp_fu_443_p0;
reg   [63:0] grp_fu_443_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state47;
reg   [63:0] grp_fu_447_p0;
reg   [63:0] grp_fu_447_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state34;
reg   [63:0] grp_fu_452_p0;
reg   [63:0] grp_fu_452_p1;
wire   [9:0] tmp_fu_512_p3;
wire   [6:0] tmp_9_fu_524_p3;
wire   [10:0] p_shl4_cast_fu_520_p1;
wire   [10:0] p_shl5_cast_fu_532_p1;
wire   [4:0] tmp_i_fu_504_p3;
wire   [4:0] tmp_16_i_fu_542_p2;
wire   [9:0] tmp_1_fu_548_p3;
wire   [6:0] tmp_6_fu_560_p3;
wire   [10:0] p_shl2_cast_fu_556_p1;
wire   [10:0] p_shl3_cast_fu_568_p1;
wire   [7:0] tmp_8_fu_578_p3;
wire   [8:0] p_shl_cast_fu_586_p1;
wire   [8:0] p_shl1_cast_fu_590_p1;
wire   [4:0] tmp_19_i_fu_612_p3;
wire   [10:0] tmp_20_i_cast_fu_620_p1;
wire   [10:0] tmp_14_fu_624_p2;
wire   [4:0] tmp_22_i_fu_639_p2;
wire   [10:0] tmp_23_i_cast_fu_645_p1;
wire   [10:0] tmp_16_fu_649_p2;
wire   [8:0] tmp_30_i_cast_fu_664_p1;
wire   [7:0] tmp_11_fu_703_p3;
wire   [4:0] tmp_12_fu_715_p3;
wire   [8:0] p_shl6_cast_fu_711_p1;
wire   [8:0] p_shl7_cast_fu_723_p1;
wire   [8:0] tmp_1_cast_fu_745_p1;
wire   [8:0] tmp_19_fu_749_p2;
wire   [7:0] tmp_20_fu_805_p3;
wire   [4:0] tmp_21_fu_817_p3;
wire   [8:0] p_shl8_cast_fu_813_p1;
wire   [8:0] p_shl9_cast_fu_825_p1;
wire   [8:0] tmp_6_cast_fu_858_p1;
wire   [7:0] tmp_23_fu_891_p3;
wire   [4:0] tmp_24_fu_903_p3;
wire   [8:0] p_shl13_cast_fu_899_p1;
wire   [8:0] p_shl14_cast_fu_911_p1;
wire   [3:0] tmp_i6_fu_883_p3;
wire   [3:0] tmp_2_i_fu_921_p2;
wire   [7:0] tmp_26_fu_927_p3;
wire   [4:0] tmp_27_fu_939_p3;
wire   [8:0] p_shl11_cast_fu_935_p1;
wire   [8:0] p_shl12_cast_fu_947_p1;
wire   [5:0] tmp_29_fu_961_p3;
wire   [6:0] p_shl10_cast_fu_969_p1;
wire   [6:0] tmp_4_i_cast_fu_957_p1;
wire   [3:0] tmp_6_i_fu_991_p3;
wire   [8:0] tmp_7_i_cast_fu_999_p1;
wire   [8:0] tmp_34_fu_1003_p2;
wire   [3:0] tmp_9_i_fu_1018_p2;
wire   [8:0] tmp_i1_cast_fu_1024_p1;
wire   [8:0] tmp_36_fu_1028_p2;
wire   [6:0] tmp_15_i_cast_fu_1043_p1;
wire   [5:0] tmp_32_fu_1080_p3;
wire   [6:0] p_shl15_cast_fu_1088_p1;
wire   [6:0] tmp_7_cast_fu_1076_p1;
wire   [6:0] tmp_8_cast_fu_1110_p1;
wire   [6:0] tmp_39_fu_1114_p2;
reg   [53:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
end

compute_out_data_1 #(
    .DataWidth( 64 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
out_data_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_data_1_address0),
    .ce0(out_data_1_ce0),
    .we0(out_data_1_we0),
    .d0(reg_480),
    .q0(out_data_1_q0)
);

compute_out_data_1 #(
    .DataWidth( 64 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
fifo_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fifo_out_address0),
    .ce0(fifo_out_ce0),
    .we0(fifo_out_we0),
    .d0(fifo_in_temp_q0),
    .q0(fifo_out_q0)
);

compute_out_data_2 #(
    .DataWidth( 64 ),
    .AddressRange( 49 ),
    .AddressWidth( 6 ))
out_data_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_data_2_address0),
    .ce0(out_data_2_ce0),
    .we0(out_data_2_we0),
    .d0(reg_480),
    .q0(out_data_2_q0)
);

compute_out_data #(
    .DataWidth( 64 ),
    .AddressRange( 49 ),
    .AddressWidth( 6 ))
out_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_data_address0),
    .ce0(out_data_ce0),
    .we0(out_data_we0),
    .d0(out_data_2_q0)
);

compute_fifo_in_tbkb #(
    .DataWidth( 64 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
fifo_in_temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fifo_in_temp_address0),
    .ce0(fifo_in_temp_ce0),
    .we0(fifo_in_temp_we0),
    .d0(out_data_1_q0),
    .q0(fifo_in_temp_q0)
);

compute_in_conv2 #(
    .DataWidth( 64 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
in_conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(in_conv2_address0),
    .ce0(in_conv2_ce0),
    .we0(in_conv2_we0),
    .d0(fifo_out_q0),
    .q0(in_conv2_q0),
    .address1(in_conv2_address1),
    .ce1(in_conv2_ce1),
    .q1(in_conv2_q1)
);

compute_dadd_64nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dadd_64nscud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_443_p0),
    .din1(grp_fu_443_p1),
    .ce(1'b1),
    .dout(grp_fu_443_p2)
);

compute_dmul_64nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nsdEe_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_447_p0),
    .din1(grp_fu_447_p1),
    .ce(1'b1),
    .dout(grp_fu_447_p2)
);

compute_dmul_64nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
compute_dmul_64nsdEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_452_p0),
    .din1(grp_fu_452_p1),
    .ce(1'b1),
    .dout(grp_fu_452_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        counter_buffer1_1_reg_333 <= tmp_2_fu_759_p2;
    end else if (((exitcond5_fu_685_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        counter_buffer1_1_reg_333 <= counter_buffer1_reg_310;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_fu_492_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        counter_buffer1_reg_310 <= 8'd0;
    end else if (((exitcond4_fu_733_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        counter_buffer1_reg_310 <= counter_buffer1_2_reg_1210;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        counter_buffer2_1_reg_389 <= tmp_4_reg_1282;
    end else if (((exitcond3_fu_787_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        counter_buffer2_1_reg_389 <= counter_buffer2_reg_366;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_770_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        counter_buffer2_reg_366 <= 8'd0;
    end else if (((exitcond2_fu_835_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        counter_buffer2_reg_366 <= counter_buffer2_2_reg_1264;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_770_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        i1_reg_355 <= 4'd0;
    end else if (((exitcond2_fu_835_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        i1_reg_355 <= i_4_reg_1259;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i5_fu_871_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        i3_reg_421 <= 3'd0;
    end else if (((exitcond_fu_1098_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        i3_reg_421 <= i_5_reg_1378;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_685_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        i_i1_reg_344 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i_i1_reg_344 <= i_2_reg_1241;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_787_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        i_i4_reg_399 <= 3'd0;
    end else if (((exitcond_i9_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        i_i4_reg_399 <= i_6_reg_1300;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_i_reg_277 <= i_1_reg_1127;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_reg_277 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_fu_492_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_299 <= 4'd0;
    end else if (((exitcond4_fu_733_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        i_reg_299 <= i_3_reg_1205;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        j2_reg_378 <= j_3_reg_1277;
    end else if (((exitcond3_fu_787_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        j2_reg_378 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        j4_reg_432 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        j4_reg_432 <= j_5_reg_1391;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i5_fu_871_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        j_i8_reg_410 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        j_i8_reg_410 <= j_4_reg_1325;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_fu_492_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_i_reg_288 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        j_i_reg_288 <= j_1_reg_1152;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        j_reg_322 <= j_2_reg_1223;
    end else if (((exitcond5_fu_685_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        j_reg_322 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_463 <= ip_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_463 <= ip_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_685_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        counter_buffer1_2_reg_1210 <= counter_buffer1_2_fu_697_p2;
        tmp_13_reg_1215[8 : 1] <= tmp_13_fu_727_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_787_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        counter_buffer2_2_reg_1264 <= counter_buffer2_2_fu_799_p2;
        tmp_22_reg_1269[8 : 1] <= tmp_22_fu_829_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_1127 <= i_1_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_2_reg_1241 <= i_2_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_3_reg_1205 <= i_3_fu_691_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_4_reg_1259 <= i_4_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        i_5_reg_1378 <= i_5_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_6_reg_1300 <= i_6_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        in_conv2_load_1_reg_1355 <= in_conv2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        in_conv2_load_2_reg_1365 <= in_conv2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ip_load_1_reg_1182 <= ip_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ip_load_2_reg_1192 <= ip_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_1152 <= j_1_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j_2_reg_1223 <= j_2_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        j_3_reg_1277 <= j_3_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        j_4_reg_1325 <= j_4_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        j_5_reg_1391 <= j_5_fu_1104_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_469 <= grp_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_475 <= grp_fu_452_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_480 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state33))) begin
        reg_487 <= in_conv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i_fu_492_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_10_reg_1144[8 : 1] <= tmp_10_fu_594_p2[8 : 1];
        tmp_7_reg_1138[10 : 3] <= tmp_7_fu_572_p2[10 : 3];
        tmp_s_reg_1132[10 : 3] <= tmp_s_fu_536_p2[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i_fu_600_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_15_reg_1162[10 : 1] <= tmp_15_fu_634_p2[10 : 1];
        tmp_17_reg_1172[10 : 1] <= tmp_17_fu_659_p2[10 : 1];
        tmp_18_reg_1177 <= tmp_18_fu_668_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_i5_fu_871_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        tmp_25_reg_1305[8 : 2] <= tmp_25_fu_915_p2[8 : 2];
        tmp_28_reg_1311[8 : 2] <= tmp_28_fu_951_p2[8 : 2];
        tmp_30_reg_1317 <= tmp_30_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_835_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        tmp_31_reg_1292 <= tmp_31_fu_862_p2;
        tmp_4_reg_1282 <= tmp_4_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        tmp_33_reg_1383 <= tmp_33_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i9_fu_979_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        tmp_35_reg_1335[8 : 1] <= tmp_35_fu_1013_p2[8 : 1];
        tmp_37_reg_1345[8 : 1] <= tmp_37_fu_1038_p2[8 : 1];
        tmp_38_reg_1350 <= tmp_38_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_1098_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        tmp_45_cast_reg_1396 <= tmp_45_cast_fu_1119_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_i2_fu_770_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        tmp_i3_reg_1246[7 : 0] <= tmp_i3_fu_782_p1[7 : 0];
    end
end

always @ (*) begin
    if (((exitcond1_fu_1064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_1064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        fifo_in_temp_address0 = tmp_i3_fu_782_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        fifo_in_temp_address0 = tmp_3_fu_765_p1;
    end else begin
        fifo_in_temp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        fifo_in_temp_ce0 = 1'b1;
    end else begin
        fifo_in_temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fifo_in_temp_we0 = 1'b1;
    end else begin
        fifo_in_temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        fifo_out_address0 = tmp_5_fu_853_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fifo_out_address0 = tmp_i3_reg_1246;
    end else begin
        fifo_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state29))) begin
        fifo_out_ce0 = 1'b1;
    end else begin
        fifo_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        fifo_out_we0 = 1'b1;
    end else begin
        fifo_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_443_p0 = reg_480;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_443_p0 = reg_469;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_443_p1 = reg_469;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state10))) begin
        grp_fu_443_p1 = reg_475;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_447_p0 = in_conv2_load_2_reg_1365;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state42))) begin
        grp_fu_447_p0 = reg_487;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_447_p0 = ip_load_2_reg_1192;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_447_p0 = reg_463;
    end else begin
        grp_fu_447_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_447_p1 = 64'd13823602611900151347;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_447_p1 = 64'd13814054183192703881;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_447_p1 = 64'd4586731996590780929;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_447_p1 = 64'd13794823170030093045;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_447_p1 = 64'd13819929335351615612;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_447_p1 = 64'd4591256085074440169;
    end else begin
        grp_fu_447_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_452_p0 = in_conv2_load_1_reg_1355;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_452_p0 = ip_load_1_reg_1182;
    end else begin
        grp_fu_452_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_452_p1 = 64'd13823672472278003074;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_452_p1 = 64'd4590519024518272833;
    end else begin
        grp_fu_452_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        in_conv2_address0 = tmp_43_cast_fu_1056_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        in_conv2_address0 = tmp_40_cast_fu_1008_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        in_conv2_address0 = tmp_37_cast_fu_867_p1;
    end else begin
        in_conv2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        in_conv2_address1 = tmp_41_cast_fu_1052_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        in_conv2_address1 = tmp_42_cast_fu_1033_p1;
    end else begin
        in_conv2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32))) begin
        in_conv2_ce0 = 1'b1;
    end else begin
        in_conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32))) begin
        in_conv2_ce1 = 1'b1;
    end else begin
        in_conv2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        in_conv2_we0 = 1'b1;
    end else begin
        in_conv2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ip_address0 = tmp_21_cast_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ip_address0 = tmp_20_cast_fu_629_p1;
    end else begin
        ip_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ip_address1 = tmp_23_cast_fu_677_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ip_address1 = tmp_22_cast_fu_654_p1;
    end else begin
        ip_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3))) begin
        ip_ce0 = 1'b1;
    end else begin
        ip_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3))) begin
        ip_ce1 = 1'b1;
    end else begin
        ip_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        out_data_1_address0 = tmp_25_cast_fu_754_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        out_data_1_address0 = tmp_24_cast_fu_681_p1;
    end else begin
        out_data_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24))) begin
        out_data_1_ce0 = 1'b1;
    end else begin
        out_data_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        out_data_1_we0 = 1'b1;
    end else begin
        out_data_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        out_data_2_address0 = tmp_45_cast_fu_1119_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        out_data_2_address0 = tmp_44_cast_fu_1060_p1;
    end else begin
        out_data_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state53))) begin
        out_data_2_ce0 = 1'b1;
    end else begin
        out_data_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        out_data_2_we0 = 1'b1;
    end else begin
        out_data_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        out_data_ce0 = 1'b1;
    end else begin
        out_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        out_data_we0 = 1'b1;
    end else begin
        out_data_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_i_fu_492_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond_i_fu_600_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state23 : begin
            if (((exitcond5_fu_685_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((exitcond4_fu_733_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond_i2_fu_770_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state28 : begin
            if (((exitcond3_fu_787_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((exitcond2_fu_835_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state31 : begin
            if (((exitcond1_i5_fu_871_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((exitcond_i9_fu_979_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state52 : begin
            if (((exitcond1_fu_1064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((exitcond_fu_1098_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign counter_buffer1_2_fu_697_p2 = (counter_buffer1_reg_310 + 8'd14);

assign counter_buffer2_2_fu_799_p2 = (counter_buffer2_reg_366 + 8'd14);

assign exitcond1_fu_1064_p2 = ((i3_reg_421 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond1_i5_fu_871_p2 = ((i_i4_reg_399 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond1_i_fu_492_p2 = ((i_i_reg_277 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond2_fu_835_p2 = ((j2_reg_378 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond3_fu_787_p2 = ((i1_reg_355 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond4_fu_733_p2 = ((j_reg_322 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond5_fu_685_p2 = ((i_reg_299 == 4'd14) ? 1'b1 : 1'b0);

assign exitcond_fu_1098_p2 = ((j4_reg_432 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond_i2_fu_770_p2 = ((i_i1_reg_344 == 8'd196) ? 1'b1 : 1'b0);

assign exitcond_i9_fu_979_p2 = ((j_i8_reg_410 == 3'd7) ? 1'b1 : 1'b0);

assign exitcond_i_fu_600_p2 = ((j_i_reg_288 == 4'd14) ? 1'b1 : 1'b0);

assign i_1_fu_498_p2 = (i_i_reg_277 + 4'd1);

assign i_2_fu_776_p2 = (i_i1_reg_344 + 8'd1);

assign i_3_fu_691_p2 = (i_reg_299 + 4'd1);

assign i_4_fu_793_p2 = (i1_reg_355 + 4'd1);

assign i_5_fu_1070_p2 = (i3_reg_421 + 3'd1);

assign i_6_fu_877_p2 = (i_i4_reg_399 + 3'd1);

assign j_1_fu_606_p2 = (j_i_reg_288 + 4'd1);

assign j_2_fu_739_p2 = (j_reg_322 + 4'd1);

assign j_3_fu_841_p2 = (j2_reg_378 + 4'd1);

assign j_4_fu_985_p2 = (j_i8_reg_410 + 3'd1);

assign j_5_fu_1104_p2 = (j4_reg_432 + 3'd1);

assign out_data_address0 = tmp_45_cast_reg_1396;

assign p_shl10_cast_fu_969_p1 = tmp_29_fu_961_p3;

assign p_shl11_cast_fu_935_p1 = tmp_26_fu_927_p3;

assign p_shl12_cast_fu_947_p1 = tmp_27_fu_939_p3;

assign p_shl13_cast_fu_899_p1 = tmp_23_fu_891_p3;

assign p_shl14_cast_fu_911_p1 = tmp_24_fu_903_p3;

assign p_shl15_cast_fu_1088_p1 = tmp_32_fu_1080_p3;

assign p_shl1_cast_fu_590_p1 = tmp_i_fu_504_p3;

assign p_shl2_cast_fu_556_p1 = tmp_1_fu_548_p3;

assign p_shl3_cast_fu_568_p1 = tmp_6_fu_560_p3;

assign p_shl4_cast_fu_520_p1 = tmp_fu_512_p3;

assign p_shl5_cast_fu_532_p1 = tmp_9_fu_524_p3;

assign p_shl6_cast_fu_711_p1 = tmp_11_fu_703_p3;

assign p_shl7_cast_fu_723_p1 = tmp_12_fu_715_p3;

assign p_shl8_cast_fu_813_p1 = tmp_20_fu_805_p3;

assign p_shl9_cast_fu_825_p1 = tmp_21_fu_817_p3;

assign p_shl_cast_fu_586_p1 = tmp_8_fu_578_p3;

assign tmp_10_fu_594_p2 = (p_shl_cast_fu_586_p1 - p_shl1_cast_fu_590_p1);

assign tmp_11_fu_703_p3 = {{i_reg_299}, {4'd0}};

assign tmp_12_fu_715_p3 = {{i_reg_299}, {1'd0}};

assign tmp_13_fu_727_p2 = (p_shl6_cast_fu_711_p1 - p_shl7_cast_fu_723_p1);

assign tmp_14_fu_624_p2 = (tmp_20_i_cast_fu_620_p1 + tmp_s_reg_1132);

assign tmp_15_fu_634_p2 = (tmp_20_i_cast_fu_620_p1 + tmp_7_reg_1138);

assign tmp_15_i_cast_fu_1043_p1 = j_i8_reg_410;

assign tmp_16_fu_649_p2 = (tmp_23_i_cast_fu_645_p1 + tmp_s_reg_1132);

assign tmp_16_i_fu_542_p2 = (tmp_i_fu_504_p3 | 5'd1);

assign tmp_17_fu_659_p2 = (tmp_23_i_cast_fu_645_p1 + tmp_7_reg_1138);

assign tmp_18_fu_668_p2 = (tmp_30_i_cast_fu_664_p1 + tmp_10_reg_1144);

assign tmp_19_fu_749_p2 = (tmp_13_reg_1215 + tmp_1_cast_fu_745_p1);

assign tmp_19_i_fu_612_p3 = {{j_i_reg_288}, {1'd0}};

assign tmp_1_cast_fu_745_p1 = j_reg_322;

assign tmp_1_fu_548_p3 = {{tmp_16_i_fu_542_p2}, {5'd0}};

assign tmp_20_cast_fu_629_p1 = $signed(tmp_14_fu_624_p2);

assign tmp_20_fu_805_p3 = {{i1_reg_355}, {4'd0}};

assign tmp_20_i_cast_fu_620_p1 = tmp_19_i_fu_612_p3;

assign tmp_21_cast_fu_673_p1 = $signed(tmp_15_reg_1162);

assign tmp_21_fu_817_p3 = {{i1_reg_355}, {1'd0}};

assign tmp_22_cast_fu_654_p1 = $signed(tmp_16_fu_649_p2);

assign tmp_22_fu_829_p2 = (p_shl8_cast_fu_813_p1 - p_shl9_cast_fu_825_p1);

assign tmp_22_i_fu_639_p2 = (tmp_19_i_fu_612_p3 | 5'd1);

assign tmp_23_cast_fu_677_p1 = $signed(tmp_17_reg_1172);

assign tmp_23_fu_891_p3 = {{i_i4_reg_399}, {5'd0}};

assign tmp_23_i_cast_fu_645_p1 = tmp_22_i_fu_639_p2;

assign tmp_24_cast_fu_681_p1 = $signed(tmp_18_reg_1177);

assign tmp_24_fu_903_p3 = {{i_i4_reg_399}, {2'd0}};

assign tmp_25_cast_fu_754_p1 = $signed(tmp_19_fu_749_p2);

assign tmp_25_fu_915_p2 = (p_shl13_cast_fu_899_p1 - p_shl14_cast_fu_911_p1);

assign tmp_26_fu_927_p3 = {{tmp_2_i_fu_921_p2}, {4'd0}};

assign tmp_27_fu_939_p3 = {{tmp_2_i_fu_921_p2}, {1'd0}};

assign tmp_28_fu_951_p2 = (p_shl11_cast_fu_935_p1 - p_shl12_cast_fu_947_p1);

assign tmp_29_fu_961_p3 = {{i_i4_reg_399}, {3'd0}};

assign tmp_2_fu_759_p2 = (counter_buffer1_1_reg_333 + 8'd1);

assign tmp_2_i_fu_921_p2 = (tmp_i6_fu_883_p3 | 4'd1);

assign tmp_30_fu_973_p2 = (p_shl10_cast_fu_969_p1 - tmp_4_i_cast_fu_957_p1);

assign tmp_30_i_cast_fu_664_p1 = j_i_reg_288;

assign tmp_31_fu_862_p2 = (tmp_22_reg_1269 + tmp_6_cast_fu_858_p1);

assign tmp_32_fu_1080_p3 = {{i3_reg_421}, {3'd0}};

assign tmp_33_fu_1092_p2 = (p_shl15_cast_fu_1088_p1 - tmp_7_cast_fu_1076_p1);

assign tmp_34_fu_1003_p2 = (tmp_7_i_cast_fu_999_p1 + tmp_25_reg_1305);

assign tmp_35_fu_1013_p2 = (tmp_7_i_cast_fu_999_p1 + tmp_28_reg_1311);

assign tmp_36_fu_1028_p2 = (tmp_i1_cast_fu_1024_p1 + tmp_25_reg_1305);

assign tmp_37_cast_fu_867_p1 = $signed(tmp_31_reg_1292);

assign tmp_37_fu_1038_p2 = (tmp_i1_cast_fu_1024_p1 + tmp_28_reg_1311);

assign tmp_38_fu_1047_p2 = (tmp_15_i_cast_fu_1043_p1 + tmp_30_reg_1317);

assign tmp_39_fu_1114_p2 = (tmp_33_reg_1383 + tmp_8_cast_fu_1110_p1);

assign tmp_3_fu_765_p1 = counter_buffer1_1_reg_333;

assign tmp_40_cast_fu_1008_p1 = $signed(tmp_34_fu_1003_p2);

assign tmp_41_cast_fu_1052_p1 = $signed(tmp_35_reg_1335);

assign tmp_42_cast_fu_1033_p1 = $signed(tmp_36_fu_1028_p2);

assign tmp_43_cast_fu_1056_p1 = $signed(tmp_37_reg_1345);

assign tmp_44_cast_fu_1060_p1 = $signed(tmp_38_reg_1350);

assign tmp_45_cast_fu_1119_p1 = $signed(tmp_39_fu_1114_p2);

assign tmp_4_fu_847_p2 = (counter_buffer2_1_reg_389 + 8'd1);

assign tmp_4_i_cast_fu_957_p1 = i_i4_reg_399;

assign tmp_5_fu_853_p1 = counter_buffer2_1_reg_389;

assign tmp_6_cast_fu_858_p1 = j2_reg_378;

assign tmp_6_fu_560_p3 = {{tmp_16_i_fu_542_p2}, {2'd0}};

assign tmp_6_i_fu_991_p3 = {{j_i8_reg_410}, {1'd0}};

assign tmp_7_cast_fu_1076_p1 = i3_reg_421;

assign tmp_7_fu_572_p2 = (p_shl2_cast_fu_556_p1 - p_shl3_cast_fu_568_p1);

assign tmp_7_i_cast_fu_999_p1 = tmp_6_i_fu_991_p3;

assign tmp_8_cast_fu_1110_p1 = j4_reg_432;

assign tmp_8_fu_578_p3 = {{i_i_reg_277}, {4'd0}};

assign tmp_9_fu_524_p3 = {{i_i_reg_277}, {3'd0}};

assign tmp_9_i_fu_1018_p2 = (tmp_6_i_fu_991_p3 | 4'd1);

assign tmp_fu_512_p3 = {{i_i_reg_277}, {6'd0}};

assign tmp_i1_cast_fu_1024_p1 = tmp_9_i_fu_1018_p2;

assign tmp_i3_fu_782_p1 = i_i1_reg_344;

assign tmp_i6_fu_883_p3 = {{i_i4_reg_399}, {1'd0}};

assign tmp_i_fu_504_p3 = {{i_i_reg_277}, {1'd0}};

assign tmp_s_fu_536_p2 = (p_shl4_cast_fu_520_p1 - p_shl5_cast_fu_532_p1);

always @ (posedge ap_clk) begin
    tmp_s_reg_1132[2:0] <= 3'b000;
    tmp_7_reg_1138[2:0] <= 3'b100;
    tmp_10_reg_1144[0] <= 1'b0;
    tmp_15_reg_1162[0] <= 1'b0;
    tmp_17_reg_1172[0] <= 1'b1;
    tmp_13_reg_1215[0] <= 1'b0;
    tmp_i3_reg_1246[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_22_reg_1269[0] <= 1'b0;
    tmp_25_reg_1305[1:0] <= 2'b00;
    tmp_28_reg_1311[1:0] <= 2'b10;
    tmp_35_reg_1335[0] <= 1'b0;
    tmp_37_reg_1345[0] <= 1'b1;
end

endmodule //compute
